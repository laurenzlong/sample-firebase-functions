// The MIT License (MIT)
//
// Copyright (c) 2018 Firebase
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

import * as _ from 'lodash';
import { AppOptions } from 'firebase-admin';

/** Initialize the SDK. */
export function init(
    /** Firebase config values for initializing a Firebase app for your test code to
     * interact with (e.g. making database writes). It is recommended that you use
     * a project that is specifically for testing. If omitted, mock config values will
     * be used and your tests will not interact with a real Firebase app, and all Firebase
     * methods need to be stubbed, otherwise they will fail.
      */
    firebaseConfig?: AppOptions,
    /** Path to a service account key file to be used when initializing the Firebase app. */
    pathToServiceAccountKey?: string
  ){
  if (_.isEmpty(firebaseConfig)) {
    process.env.FIREBASE_CONFIG = JSON.stringify({
        databaseURL: 'https://not-a-project.firebaseio.com',
        storageBucket: 'not-a-project.appspot.com',
        projectId: 'not-a-project',
    });
  } else {
    process.env.FIREBASE_CONFIG = JSON.stringify(firebaseConfig);
    if (pathToServiceAccountKey) {
      process.env.GOOGLE_APPLICATION_CREDENTIALS = pathToServiceAccountKey;
    }
  }
  process.env.GCLOUD_PROJECT = JSON.parse(process.env.FIREBASE_CONFIG).projectId;
}

/** Clean up environment variables that were set during the initialization of the SDK. */
export function cleanUp() {
  delete process.env.FIREBASE_CONFIG;
  delete process.env.GCLOUD_PROJECT;
  delete process.env.GOOGLE_APPLICATION_CREDENTIALS;
  delete process.env.CLOUD_RUNTIME_CONFIG;
}

/** Mock values returned by `functions.config()`. */
export function mockConfig(config: { [key: string]: { [key: string]: any } }) {
  process.env.CLOUD_RUNTIME_CONFIG = JSON.stringify(config);
}
